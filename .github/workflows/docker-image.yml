# This is a basic workflow to help you get started with Actions
name: CI-CD
# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
   branches: [ main ]
  pull_request:
   branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains multiple jobs
  build_test:
    name: Build & Test App
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    # Run build and test only if the commit message says build app
    #if: "contains(github.event.commits[0].message, '[build app]')"
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: setup node
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}

      # install applicaion dependencies
      - name: Install dependencies
        run: |
          npm install
          npm ci 
  push_to_Docker_Hub:
      name: Push Images to DockerHub
      # The type of runner that the job will run on
      runs-on: ubuntu-latest
      # build docker image and push to docker hub
      # only if the app build and test successfully
      needs: [build_test]

      steps:
        - name: checkout repo
          uses: actions/checkout@v2
          
        - name: Login to DockerHub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        - name: Build and push
          uses: docker/build-push-action@v2
          with:
            context: ./
            file: ./Dockerfile
            push: true
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/portalapp:latest
        - name: Deploy Docker image to cPanel
          uses: cpanel/cpanel-docker@v2
          with:
            image: ghcr.io/${{ secrets.DOCKERHUB_USERNAME }}/portalapp:latest:${{ github.sha }}
            username: ${{ secrets.CPANEL_USERNAME }}
            password: ${{ secrets.CPANEL_PASSWORD }}
            hostname: ${{ secrets.CPANEL_HOSTNAME }}
            port: 2087
            container_port: 80
            dns: 8.8.8.8
            domain: ${{ secrets.CPANEL_HOSTNAME }}
            path: /public_html
            env_vars: |
              NODE_ENV=production
              PORT=80
          
          


